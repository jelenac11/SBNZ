package sbnz.integracija.rules.cepMidnight;

import better.me.enums.*;
import better.me.model.*;
import better.me.dto.*;
import better.me.modelDB.*;
import better.me.util.*;

global MyLogger myLogger;

query checkIfWholeWeekIsSubmitted(Week $week)
	 $num := Number(intValue == 7) from accumulate(
		Day($t:this, submitted == true) from $week.getDays(),
		count($t)
 	 )
end

rule "Calculating score for previous week"
	agenda-group "score"
	no-loop
    when
    	$user: RegisteredUser($id: id, $score: score, $week: weeks.get(weeks.size() - 1))
    	checkIfWholeWeekIsSubmitted($week;)
    	$daysCaloriesOK: Number(intValue >= 0) from accumulate (
       		$day: Day() from $week.getDays(),
			init( int ok = 0; ),
			action(
				if ($day.getCalories() >= $week.getGoalCalories() * 0.9 && $day.getCalories() <= $week.getGoalCalories() * 1.1) {
					ok += 1;
				}
			 ),
			result ( ok )
        )
        $daysMacroOK: Number(intValue >= 0) from accumulate (
       		$day: Day() from $week.getDays(),
			init( int ok = 0; ),
			action(
				if ($day.getProteins() >= $week.getGoalProteins() * 0.9 && $day.getProteins() <= $week.getGoalProteins() * 1.1) {
					ok += 1;
				}
				if ($day.getCarbs() >= $week.getGoalCarbs() * 0.9 && $day.getCarbs() <= $week.getGoalCarbs() * 1.1) {
					ok += 1;
				}
				if ($day.getFats() >= $week.getGoalFats() * 0.9 && $day.getFats() <= $week.getGoalFats() * 1.1) {
					ok += 1;
				}
			 ),
			result ( ok )
        )
    then
        myLogger.log("Calculating score for previous week: " + ($score + $daysCaloriesOK.intValue() * 10 + $daysMacroOK.intValue() * 3));
        modify ($user) {setScore($score + $daysCaloriesOK.intValue() * 10 + $daysMacroOK.intValue() * 3);}
        myLogger.log("Changed agenda-group from score to category");
		kcontext.getKnowledgeRuntime().getAgenda().getAgendaGroup("category").setFocus();
end
